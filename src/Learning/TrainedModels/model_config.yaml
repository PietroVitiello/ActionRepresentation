SpatialAE_fc_follow_1:
  batch_size: 64
  data_folder: followDummy_fixed_2
  learning_rate: 0.001
  loss: MSE
  model_name: SpatialAE_fc
  n_epochs: 100
  num_aux_outputs: 9
  num_outputs: 3
  optimiser: Adamax
  reconstruction_size: 16
  stopping_loss: BCE
  training_method: stop
  use_gpu: true
  weight_decay: 1.0e-07
  Testing:
    Cube_Reached:
    - 0
#NOTE: Was very bad, the robot arm missed the cube basically all the time. Often the cube went outside of the fov of the camera

Stopping_base_follow_1:
  batch_size: 64
  data_folder: follow_stopping_1
  learning_rate: 0.001
  loss: MSE
  model_name: Stopping_base
  n_epochs: 100
  num_aux_outputs: 9
  num_outputs: 3
  optimiser: Adamax
  reconstruction_size: 16
  stopping_loss: BCE
  training_method: stop
  use_gpu: true
  weight_decay: 1.0e-07
  Testing:
    Cube_Reached:
    - 0
#NOTE: Just did not work. Values of sopping never increased above 0.3

Aux_BaselineCNN_baxFollow_1:
  batch_size: 64
  data_folder: followDummy_3
  learning_rate: 0.001
  loss: MSE
  model_name: Aux_BaselineCNN
  n_epochs: 100
  num_aux_outputs: 9
  num_outputs: 6
  optimiser: Adamax
  reconstruction_size: 16
  stopping_loss: BCE
  training_method: eeVel_aux
  use_gpu: true
  weight_decay: 1.0e-07
  Testing:
    Cube_Reached:
    - 31
#NOTE: Very good. Only once did the arm not reached the cube, because it went above it and missed it. Once the cube is not in the fov (because it misses
#      it when it gets close) the arm does not know what to do (LSTM?)

SpatialAE_fc_follow_2:
  batch_size: 64
  data_folder: followDummy_3
  learning_rate: 0.001
  loss: MSE
  model_name: SpatialAE_fc
  n_epochs: 100
  num_aux_outputs: 9
  num_outputs: 6
  optimiser: Adamax
  reconstruction_size: 16
  stopping_loss: BCE
  training_method: AE
  use_gpu: true
  weight_decay: 1.0e-07
  Testing:
    Cube_Reached:
    - 22
    - 18
#NOTE: Quite good. However it is less precise when it gets closer to the cube. It has not learnt well how to approach the cube yet. It may need some modification

StrengthSpatialAE_fc_follow_1:
  batch_size: 64
  data_folder: followDummy_3
  learning_rate: 0.001
  loss: MSE
  model_name: StrengthSpatialAE_fc
  n_epochs: 100
  num_aux_outputs: 9
  num_outputs: 6
  optimiser: Adamax
  reconstruction_size: 16
  stopping_loss: BCE
  training_method: AE
  use_gpu: true
  weight_decay: 1.0e-07
  Testing:
    Cube_Reached:
    - 11
#NOTE: Much worse then before, although the model above was trained with decoder(x) not x=decoder(x)

Aux_BaselineCNN_1_wrong:
  model_name: Aux_BaselineCNN
  data_folder: HumanLikeDemos_1
  training_method: eeVel_aux
  n_epochs: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.001
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 0
    Attempts: 32
#NOTE: So bad, it does not even move in the right direction. Sometimes it bugs

Aux_BaselineCNN_2_wrong:
  model_name: Aux_BaselineCNN
  data_folder: HumanLikeDemos_1
  training_method: eeVel_aux
  n_epochs: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0004
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 7
    Attempts: 32
#NOTE: Much better than before, it moves in the right direction but it hardly reaches the target (maybe too slow?)

Aux_BaselineCNN_1:
  model_name: Aux_BaselineCNN
  data_folder: HumanLikeDemos_1
  training_method: eeVel_aux
  n_epochs: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.001
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 28
    - 29
    Attempts: 32
#NOTE: Very good model! Dataset seems to be working. This uses the orientation as well and you can see the robot turning the orientation to face the cube!
#      This being said sometimes it messes up strangely (usually when the cube is to its left or very lateral). I definitely have to adjust the spawnable space
#      of the cube in testing and probably also in trining

Aux_BaselineCNN_2:
  model_name: Aux_BaselineCNN
  data_folder: HumanLikeDemos_1
  training_method: eeVel_aux
  n_epochs: 30
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.001
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 22
    Attempts: 32
#NOTE: Seemed better at first but it turned out to be slightly more unstable

Aux_BaselineCNN_3:
  model_name: Aux_BaselineCNN
  data_folder: HumanLikeDemos_2
  training_method: eeVel_aux
  n_epochs: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.001
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 24
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: Not good, it did some very strange movements with the arm

Aux_BaselineCNN_4:
  model_name: Aux_BaselineCNN
  data_folder: linearDemo_2
  training_method: eeVel_aux
  n_epochs: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 32
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: Flawless, it is just like the demonstrations however it uses linear trajectories!

Stop_AuxBaselineCNN_1:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 100
  n_epochs_stopping: 100
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached: []
    Boundary_Restriction: []
    Attempts:
#NOTE: It did not move at all, could it be that the weights were not fixed? I then implemented the fix weights

Stop_AuxBaselineCNN_2:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 13
  n_epochs_stopping: 14
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached: []
    Boundary_Restriction: []
    Attempts:
#NOTE: The model had not learnt how to reach the cube

Stop_AuxBaselineCNN_3:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 100
  n_epochs_stopping: 14
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 6
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: It did grasp some cubes. Sometimes it stops in mid air. However the main problem is that the reaching is not very good

Stop_AuxBaselineCNN_test:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 100
  n_epochs_stopping: 0
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 1
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: The arm reached the cube perfectly. Therefore I assume that it is the stopping training that affects the reaching as well

Stop_AuxBaselineCNN_4:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 100
  n_epochs_stopping: 10
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 1
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: I added the fc layers for reaching in the fix params but it does not work. The reaching model gets compromised

Stop_AuxBaselineCNN_5:
  model_name: Stop_AuxBaselineCNN
  data_folder: linearGrasp_1
  training_method: aux_stopIndividual
  n_epochs: 100
  n_epochs_stopping: 30
  batch_size: 64
  use_gpu: true
  optimiser: Adamax
  learning_rate: 0.0007
  weight_decay: 1.0e-07
  loss: MSE
  stopping_loss: BCE
  num_outputs: 6
  num_aux_outputs: 9
  Testing:
    Cube_Reached:
    - 30
    Boundary_Restriction:
    - moderate
    Attempts: 32
#NOTE: It works amazingly!!
